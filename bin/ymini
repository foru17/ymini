#!/usr/bin/env node

'use strict';

process.title = 'ymini';

var figlet = require('figlet');
var exec = require('exec');
var chalk = require('chalk');
var path = require('path');

var ymini = require('../gulpfile.js');
var	optimist = require('optimist')
	.usage(chalk.red('一个压缩工具'))
	.alias('v', 'version')
	.alias('js', 'javascript')
	.alias('css', 'css')
	.describe(chalk.green('js'), ':压缩js')
	.describe(chalk.green('css'), ':压缩css')

var argv = optimist.argv;
var text = argv._.join(' ');
var options = {};
var YMINI_PATH = path.resolve(__dirname, '..');

// 获得当前任务的路径
var SHELL_PATH = process.env.PWD.replace(/ /g, '\\ ');

/**
 * 显示版本信息
 * @param  {[type]} argv.version [description]
 * @return {[type]}              [description]
 */
if (argv.version) {
	figlet(require('../package.json').version, function(err, data) {
		if (err) {
			console.log('Something went wrong...');
			console.log(chalk.green(data));
			return;
		}
		console.log(chalk.red('当前版本:'));
		console.log(data);
	});
}

if (argv.javascript) {
	var AbsPath = path.resolve(argv['path']);
	exec('cd '  + YMINI_PATH + '&& gulp scripts --path ' + AbsPath, function(err, out, code) {
		if (err instanceof Error)
			throw err;
		process.stderr.write(err);
		process.stdout.write(out);
		process.exit(code);
	});
	console.log('gulp scripts --path ' + AbsPath);
}

if (argv.css) {
	var AbsPath = path.resolve(argv['path']);
	exec('cd '  + YMINI_PATH +  '&& gulp css --path ' + AbsPath, function(err, out, code) {
		if (err instanceof Error)
			throw err;
		process.stderr.write(err);
		process.stdout.write(out);
		process.exit(code);
	});

	return console.log(' gulp scripts --path ' + AbsPath);
}