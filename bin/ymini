#!/usr/bin/env node

'use strict';

process.title = 'ymini';

var figlet = require('figlet');
var exec = require('exec');
var chalk = require('chalk');
var path = require('path');
var child = require('child_process');

var ymini = require('../gulpfile.js');
var	optimist = require('optimist')
	.usage(chalk.red('一个压缩工具'))
	.alias('v', 'version')
	.alias('js', 'javascript')
	.alias('css', 'css')
	.describe(chalk.green('js'), ':压缩js')
	.describe(chalk.green('css'), ':压缩css')

var argv = optimist.argv;
var text = argv._.join(' ');
var options = {};
var YMINI_PATH = path.resolve(__dirname, '..');

// gulp任务初始参数
let args = ['--gulpfile', path.join(YMINI_PATH, 'gulpfile.js')];

/**
 * 显示版本信息
 * @param  {[type]} argv.version [description]
 * @return {[type]}              [description]
 */
if (argv.version) {
	figlet(require('../package.json').version, function(err, data) {
		if (err) {
			console.log('Something went wrong...');
			console.log(chalk.green(data));
			return;
		}
		console.log(chalk.red('当前版本:'));
		console.log(data);
	});
}

if (argv.javascript) {
	var AbsPath = path.resolve(argv['path']);
	args = args.concat('scripts','--path', AbsPath);
	try{
		var task = child.fork(path.join(YMINI_PATH, 'node_modules/gulp/bin/gulp'), args);
	}catch(e){
		console.log(e)
	}
}

if (argv.css) {
	var AbsPath = path.resolve(argv['path']);
	args = args.concat('css','--path', AbsPath);
	try{
		var task = child.fork(path.join(YMINI_PATH, 'node_modules/gulp/bin/gulp'), args)
	}catch(e){
		console.log(e)
	}
}